{"version":3,"sources":["assets/logo-light.svg","assets/icon-bicycle-400.svg","assets/icon-hamburger.svg","assets/icon-route.svg","assets/icon-vacation.svg","assets/icon-phone.svg","layout/header.js","utils/getGeolocation.js","utils/fetchTdxApi.js","assets/icon-bicycle-grey.svg","assets/icon-parking.svg","assets/icon-parking-grey.svg","assets/icon-user-position-mobile.svg","assets/icon-geolocation.svg","assets/icon-bicycle-white.svg","assets/icon-parking-white.svg","utils/decideByAvailability.js","components/bikeMap.js","assets/icon-collapse-top.svg","assets/icon-collapse-down.svg","assets/icon-sort.svg","assets/icon-parking-red.svg","assets/icon-bicycle-500.svg","assets/icon-bicycle-red.svg","layout/main.js","App.js","index.js"],"names":["Logo","className","target","rel","href","src","logoSvg","alt","Header","props","asyncGetGeolocation","options","enableHighAccuracy","timeout","maximumAge","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","data","coords","latitude","longitude","error","getAvailableBikes","userPosition","a","console","log","lat","lng","stationUrl","allSettled","fetchTdxApi","result","value","bikeData","stationIndex","stationData","map","item","StationUID","bikeDetail","filter","indexOf","i","length","stationStatus","stationId","stationName","StationName","Zh_tw","stationAddress","StationAddress","stationPosition","StationPosition","PositionLat","PositionLon","serviceStatus","ServiceStatus","availableRentBikes","AvailableRentBikes","availableReturnBikes","AvailableReturnBikes","srcUpdateTime","SrcUpdateTime","push","url","getToken","tokenCode","fetch","headers","authorization","access_token","response","json","queryString","URLSearchParams","grant_type","client_id","client_secret","toString","method","body","decideByAvailability","BikeMap","bikesAvailable","isFindingBikes","isLocatingUser","handleLocateUser","handleFindingType","bikeMapRef","useRef","userPositionMarkerRef","bikeMarkersRef","getLocationButton","disabled","onClick","geolocactionSvg","useEffect","current","L","attributionControl","zoomControl","center","zoom","layers","tileLayer","attribution","removeLayer","setView","userPositionIcon","icon","iconUrl","userPositionMobileSvg","iconSize","marker","addTo","bikeMarkerStatusStyle_bikes","bikeMarkerStatusStyle_parks","forEach","bikeMarker","station","index","bikeversion","includes","availableBikesStyle","availableParksStyle","availableBikesImg","bicycleGreySvg","availableParksImg","parkingGreySvg","divIcon","html","updateTime","exec","popupHtml","bindPopup","remove","id","htmlFor","type","name","checked","onChange","hidden","bicycleWhiteSvg","bicycle400Svg","parkingSvg","parkingWhiteSvg","Main","useState","setUserPosition","setBikesAvailable","setIsLocatingUser","setIsFindingBikes","getPosition","useCallback","bikes","bool","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96325c06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-light.6beea48f.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-400.af5823eb.svg\";","export default __webpack_public_path__ + \"static/media/icon-hamburger.5ab53298.svg\";","export default __webpack_public_path__ + \"static/media/icon-route.6dc5afc7.svg\";","export default __webpack_public_path__ + \"static/media/icon-vacation.f4ddab30.svg\";","export default __webpack_public_path__ + \"static/media/icon-phone.da580534.svg\";","import { useState } from \"react\";\nimport \"./header.css\";\nimport logoSvg from \"../assets/logo-light.svg\";\nimport hamburgerSvg from \"../assets/icon-hamburger.svg\";\nimport bicycle400Svg from \"../assets/icon-bicycle-400.svg\";\nimport routeSvg from \"../assets/icon-route.svg\";\nimport vacationSvg from \"../assets/icon-vacation.svg\";\nimport phoneSvg from \"../assets/icon-phone.svg\";\n\nfunction Logo() {\n  return (\n    <h1 className=\"logo\">\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://reiracode.github.io/nbike/  \"\n      >\n        <img src={logoSvg} alt=\"Bikeland\" />\n      </a>\n    </h1>\n  );\n}\n\n\n\nfunction Header(props) {\n\n\n  return (\n    <header>\n      <div className=\"header_wrapper\">\n        <Logo />\n        \n      </div>\n   \n    </header>\n  );\n}\n\nexport default Header;\n","const asyncGetGeolocation = (\n  options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n) => {\n  return new Promise((resolve, reject) => {\n    function onResolve(data) {\n      resolve([data.coords.latitude, data.coords.longitude]);\n    }\n    function onReject(error) {\n      reject(error);\n    }\n    navigator.geolocation.getCurrentPosition(onResolve, onReject, options);\n  });\n};\n\n// const asyncGetGeolocation = () => {\n//   return new Promise((resolve) => {\n//     if (navigator.geolocation) {\n//       const position = (position) => {\n//         resolve([position.coords.latitude, position.coords.longitude]);\n//       };\n//       const showError = (error) => {\n//         switch (error.code) {\n//           case error.PERMISSION_DENIED:\n//             alert(\"讀取不到您目前的位置\");\n//             break;\n//           case error.POSITION_UNAVAILABLE:\n//             alert(\"讀取不到您目前的位置\");\n//             break;\n//           case error.TIMEOUT:\n//             alert(\"讀取位置逾時\");\n//             break;\n//           case error.UNKNOWN_ERROR:\n//             alert(\"Error\");\n//             break;\n//         }\n//         resolve([35.4122, 139.4130]);\n//       };\n//       navigator.geolocation.getCurrentPosition(position, showError);\n//     }\n//   });\n// };\n\nexport default asyncGetGeolocation;\n","import jsSHA from \"jssha/dist/sha1\";\n// https://tdx.transportdata.tw/api-service/swagger#/Bike%20Advanced(Nearby)/BikeApi_Station_AllCity_NearBy_2870\n\nexport async function getAvailableBikes(userPosition) {\n  console.log(userPosition)\n\n  //前後端的関係：如果api 後端没有處理好，advanced的功能就會在前端，json資料的比對，計算距離\n  //口罩地圖和ubike的不同。\n  //不用token的話：放上github 就用basic 搭配indexOf > -1\n  try {\n    const [lat, lng] = userPosition;\n    // const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    // const stationUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Station/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Availability/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n\n    const data = await Promise.allSettled([\n      fetchTdxApi(stationUrl),\n      fetchTdxApi(bikeUrl),\n    ]);\n\n    const result = [];\n    const [stationData, bikeData] = [data[0].value, data[1].value];\n\n    const stationIndex = stationData.map(item => item.StationUID);\n    // console.log(stationIndex)\n\n    const bikeDetail = bikeData.filter((item) => stationIndex.indexOf(item.StationUID) > -1)\n    console.log(bikeDetail)\n\n    ////////////////////\n    for (let i = 0; i < stationData.length; i++) {\n      let stationStatus = {\n        stationId: stationData[i].StationUID,\n        stationName: stationData[i].StationName.Zh_tw,\n        stationAddress: stationData[i].StationAddress.Zh_tw,\n        stationPosition: {\n          lat: stationData[i].StationPosition.PositionLat,\n          lng: stationData[i].StationPosition.PositionLon,\n        },\n        serviceStatus: bikeDetail[i].ServiceStatus,\n        availableRentBikes: bikeDetail[i].AvailableRentBikes,\n        availableReturnBikes: bikeDetail[i].AvailableReturnBikes,\n        srcUpdateTime: bikeDetail[i].SrcUpdateTime,\n      };\n      result.push(stationStatus);\n    }\n    console.log(result) ;\n    return result;\n\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default async function fetchTdxApi(url) {\n  const tokenCode = await getToken();\n  try {\n    const response = await fetch(url, { headers: { authorization: `Bearer ${tokenCode.access_token}` } });\n    \n    // const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getToken() {\n  const parameter = {\n    grant_type: \"client_credentials\",\n    client_id: \"reira.igg-178246c9-c6da-466e\",\n    client_secret: \"9f16dc51-0a6e-492c-9dd6-278b917d0c67\"\n  };\n  let auth_url = \"https://tdx.transportdata.tw/auth/realms/TDXConnect/protocol/openid-connect/token\";\n  const queryString = new URLSearchParams(parameter).toString();\n\n  let response = await fetch(auth_url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: (queryString)\n  });\n\n  // you can check for response.ok here, and literally just throw an error if you want\n  return await response.json();\n}\n","export default __webpack_public_path__ + \"static/media/icon-bicycle-grey.e2b1d7d4.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking.d41d0ee4.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-grey.84ff3ab7.svg\";","export default __webpack_public_path__ + \"static/media/icon-user-position-mobile.4af8babd.svg\";","export default __webpack_public_path__ + \"static/media/icon-geolocation.7783d3dc.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-white.60cb5498.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-white.95eab66a.svg\";","export default function decideByAvailability(options) {\n  // const { source, resultNone, resultFew, resultNormal } = options;\n \n  // 判斷數量 0 5 normal\n  // if (source === 0) return resultNone;\n  // if (source <= 5) return resultFew;\n\n  if (options === 0) {\n    return \"none\";\n  } else if (options <= 5) {\n    return \"few\";\n  } else {\n    return \"\";\n  }\n}\n\n// bikeMarkerStatusStyle_parks = decideByAvailability({\n//   source: station.availableReturnBikes,\n//   resultNone: \"none\",\n//   resultFew: \"few\",\n//   resultNormal: \"\",\n// });\n//用source 判斷回傳值","import bicycleGreySvg from \"../assets/icon-bicycle-grey.svg\";\nimport parkingSvg from \"../assets/icon-parking.svg\";\n\nimport parkingGreySvg from \"../assets/icon-parking-grey.svg\";\nimport userPositionMobileSvg from \"../assets/icon-user-position-mobile.svg\";\nimport geolocactionSvg from \"../assets/icon-geolocation.svg\";\n\nimport bicycle400Svg from \"../assets/icon-bicycle-400.svg\";\nimport bicycleWhiteSvg from \"../assets/icon-bicycle-white.svg\";\nimport parkingWhiteSvg from \"../assets/icon-parking-white.svg\";\n\nimport { useEffect, useRef } from \"react\";\nimport decideByAvailability from \"../utils/decideByAvailability\";\nimport L from \"leaflet\";\n\nexport default function BikeMap({\n  userPosition,\n  bikesAvailable,\n  isFindingBikes,\n  isLocatingUser,\n  handleLocateUser,\n  handleFindingType,\n}) {\n  console.log(userPosition)\n\n  const bikeMapRef = useRef(null);\n  const userPositionMarkerRef = useRef(null);\n  const bikeMarkersRef = useRef([]);\n\n  //重新定位button\n  const getLocationButton = (\n    <button\n      className=\"geolocation\"\n      disabled={isLocatingUser ? true : false}\n      onClick={handleLocateUser}>\n      <img src={geolocactionSvg} alt=\"geo location icon\" />\n    </button>\n  );\n\n  //   create map\n  useEffect(() => {\n    // if (bikeMapRef.current) return;\n    bikeMapRef.current = L.map(\"bike_map\", {\n      attributionControl: false,\n      zoomControl: false,\n      center: userPosition,\n      zoom: 15,\n      layers: [\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        }),\n      ],\n    });\n  }, [userPosition]);\n\n\n\n  //  setView\n  useEffect(() => {\n    if (!bikeMapRef.current) return; //no map\n\n    // remove current user marker\n    if (userPositionMarkerRef.current)\n      bikeMapRef.current.removeLayer(userPositionMarkerRef.current);\n    bikeMapRef.current.setView(userPosition, 15);\n\n    // create your position icon\n    const userPositionIcon = L.icon({\n      iconUrl: userPositionMobileSvg,\n      iconSize: [36, 36]\n    });\n\n    // create marker\n    userPositionMarkerRef.current = L.marker(userPosition, {\n      icon: userPositionIcon,\n    });\n\n    // add marker\n    userPositionMarkerRef.current.addTo(bikeMapRef.current);\n  }, [userPosition]);\n\n\n\n  //setting bikeMarkers\n  useEffect(() => {\n    if (!bikeMapRef.current) return; //no map\n\n    //remove previous bike markers\n    bikeMarkersRef.current.forEach((bikeMarker) => {\n      // map remove bikeMarker\n      bikeMapRef.current.removeLayer(bikeMarker);\n    });\n\n    bikeMarkersRef.current = [];\n    let bikeMarkerStatusStyle_bikes, bikeMarkerStatusStyle_parks;\n\n    bikesAvailable.forEach((station, index) => {\n      const bikeversion = station.stationName.includes(\"2.0\") ? \"plus\" : \"\"\n \n      //bikes ==  for rent\n      //  none/few/\"\"\n      //L.marker resultNormal \n      // bikeMarkerStatusStyle_bikes = decideByAvailability(station.availableRentBikes);\n      bikeMarkerStatusStyle_bikes = decideByAvailability(station.availableRentBikes) +\" \"+ bikeversion ;\n      bikeMarkerStatusStyle_parks = decideByAvailability(station.availableReturnBikes) + \" \" + bikeversion;\n\n      // }\n      // popup  none/few/\" \"\n      const availableBikesStyle = decideByAvailability(station.availableRentBikes) + \" \" + bikeversion;\n      const availableParksStyle = decideByAvailability(station.availableReturnBikes) + \" \" + bikeversion;\n      const availableBikesImg = `<img src=${bicycleGreySvg} alt=\"bicycle icon\" />`;\n      const availableParksImg = `<img src=${parkingGreySvg} alt=\"parking icon\" />`\n\n      //L marker的資料\n      bikeMarkersRef.current[index] = L.marker(\n        [station.stationPosition.lat, station.stationPosition.lng],\n        {\n          icon: L.divIcon({\n            className: `bikeMarker ${isFindingBikes\n              ? bikeMarkerStatusStyle_bikes\n              : bikeMarkerStatusStyle_parks\n              }`,\n            html: `<span class=\"bikeMarker_number typography-bold typography-button\">\n            ${isFindingBikes\n                ? station.availableRentBikes\n                : station.availableReturnBikes\n              }</span>`\n          }),\n        }\n      );\n\n      const updateTime = /.*T(\\d*:\\d*)/g.exec(station.srcUpdateTime)[1];\n\n      // bind popup to markers?\n      const popupHtml = `<div class=\"bikeMarkers_popup\">\n          <h3 class=\"typography-bold typography-button\">${station.stationName}</h3>\n          <div class=\"popup_info\">\n              <div class=\"popup_bikes ${availableBikesStyle}\">\n                  ${availableBikesImg}\n                  <span class=\"quantity typography-bold typography-button\">${station.availableRentBikes}</span>\n              </div>\n              <div class=\"popup_parks ${availableParksStyle}\">\n                  ${availableParksImg}\n                  <span class=\"quantity typography-bold typography-button\">${station.availableReturnBikes}</span>\n              </div>\n              <span class=\"update_time typography-medium typography-caption\">${updateTime}更新</span>\n          </div>\n        </div>`;\n\n      bikeMarkersRef.current[index].bindPopup(popupHtml, {\n        className: \"popupClass\",\n      });\n\n      // bikesRef.current[index] add to map\n      bikeMarkersRef.current[index].addTo(bikeMapRef.current);\n    });\n  }, [bikesAvailable, isFindingBikes]);\n\n  //clear map unmount\n  useEffect(() => {\n    return function clearMap() {\n      if (bikeMapRef.current) {\n        bikeMapRef.current.remove();\n        bikeMapRef.current = null;\n      }\n    };\n  }, []);\n\n  // return <div id=\"bike_map\"></div>;\n  return userPosition ? <div id=\"bike_map\">\n    <div className=\"find_type_wrapper\">\n      <label htmlFor=\"find_bikes\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_bikes\"\n          checked={isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={bicycleWhiteSvg} alt=\"bicycle white icon\" />\n            ) : (\n              <img src={bicycle400Svg} alt=\"bicycle white icon\" />\n            )}\n          </div>\n          找單車\n        </button>\n      </label>\n      <label htmlFor=\"find_parks\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_parks\"\n          checked={!isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={parkingSvg} alt=\"parking icon\" />\n            ) : (\n              <img src={parkingWhiteSvg} alt=\"parking icon\" />\n            )}\n          </div>\n          找車位\n        </button>\n      </label>\n    </div>  {getLocationButton}</div> : null;\n}\n","export default __webpack_public_path__ + \"static/media/icon-collapse-top.269c0cf4.svg\";","export default __webpack_public_path__ + \"static/media/icon-collapse-down.a7d0baff.svg\";","export default __webpack_public_path__ + \"static/media/icon-sort.f7f91b6d.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-red.0b602e67.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-500.9f48f63e.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-red.90c43663.svg\";","import \"./main.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport asyncGetGeolocation from \"../utils/getGeolocation\";\nimport { getAvailableBikes } from \"../utils/fetchTdxApi\";\nimport BikeMap from \"../components/bikeMap\";\nimport MapInfo from \"../components/mapInfo\";\n\nfunction Main() {\n  function handleFindingType() {\n    setIsFindingBikes((bool) => !bool);\n  }\n\n  // const TAIPEI_COORDINATES = [35.4122, 139.4130];\n  // const [userPosition, setUserPosition] = useState(TAIPEI_COORDINATES);\n  const [userPosition, setUserPosition] = useState(false);\n  const [bikesAvailable, setBikesAvailable] = useState([]);\n  // const [isLocatingUser, setIsLocatingUser] = useState(false);\n  const [isLocatingUser, setIsLocatingUser] = useState(true);\n  const [isFindingBikes, setIsFindingBikes] = useState(true);\n \n  ///方式1   OK   try catch ////////////\n  // const getLocation = async () => {\n  //   try {\n  //     const userCoordinates = await asyncGetGeolocation();\n  //     console.log(\"default定位成功\" + userCoordinates)\n  //     setUserPosition(userCoordinates);\n  //     const bikes = await getAvailableBikes(userCoordinates);\n  //     console.log(bikes)\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getLocation();\n  // }, []);\n\n\n  // 方式3 -------  用 useCallback 並將回傳的函式取名為 fetchData\n  // const fetchData = useCallback(() => {\n  // //   // STEP 3：把原本的 fetchData 改名為 fetchingData 放到 useCallback 的函式內\n  //   const fetchingData = async () => {\n  //     const data1 = await asyncGetGeolocation();\n  //     setUserPosition(data1);\n  //     const bikes = await getAvailableBikes(data1);\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   };\n  //   fetchingData();\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('execute function in useEffect');\n  //   fetchData();\n  //   // STEP 6：把透過 useCallback 回傳的函式放到 useEffect 的 dependencies 中\n  // }, [fetchData]);\n\n\n\n \n\n\n  //  方式4  -------   OK callback //   //   //   //\n  // async function getPosts() {\n  //   const data = await asyncGetGeolocation();\n  //   console.log(data);\n  //   return data;\n  // }\n\n  const getPosition = useCallback(async () => {\n    const data = await asyncGetGeolocation();\n    // alert(\"yourlocation\" + data)\n    setUserPosition(data);\n\n    const bikes = await getAvailableBikes(data);\n    setBikesAvailable(bikes);\n    setIsLocatingUser(false);\n  }, [])\n\n  useEffect(() => {\n    console.log('execute getPosition in useEffect');\n    getPosition()\n  }, [getPosition]);\n\n\n\n  \n \n    //   //   //   //   //   //   //   // \n  \n  \n\n\n\n\n  const locatingMessage = (\n    <div className=\"overlay\">\n      <span className=\"typography-bold typography-h4\">定位中</span>\n    </div>\n  );\n\n  return (\n    <main>\n      {/* {isLocatingUser ? locatingMessage : null} */}\n      {/* {!userPosition ? locatingMessage\n        :  \n          <BikeMap\n            userPosition={userPosition}\n            bikesAvailable={bikesAvailable}\n            isFindingBikes={isFindingBikes}\n            handleLocateUser={getPosition}\n            // handleLocateUser={getLocation} \n            isLocatingUser={isLocatingUser}\n            handleFindingType={handleFindingType}\n          />\n      } */}\n \n    \n      {userPosition &&\n        <BikeMap\n          userPosition={userPosition}\n          bikesAvailable={bikesAvailable}\n          isFindingBikes={isFindingBikes}\n          handleLocateUser={getPosition}\n          // handleLocateUser={getLocation} \n          isLocatingUser={isLocatingUser}\n          handleFindingType={handleFindingType}\n        />\n      }\n  \n \n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Header from \"./layout/header\";\nimport Main from \"./layout/main\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}