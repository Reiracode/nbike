{"version":3,"sources":["assets/logo-light.svg","layout/header.js","utils/getGeolocation.js","utils/fetchTdxApi.js","assets/icon-user-position-mobile.svg","assets/icon-geolocation.svg","assets/icon-bicycle.svg","assets/icon-bicycle-grey.svg","assets/icon-bicycle-white.svg","assets/icon-parking.svg","assets/icon-parking-grey.svg","assets/icon-parking-white.svg","utils/decideByAvailability.js","components/bikeMap.js","layout/main.js","App.js","index.js"],"names":["Logo","className","target","rel","href","src","logoSvg","alt","Header","props","asyncGetGeolocation","Promise","resolve","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","alert","TIMEOUT","UNKNOWN_ERROR","getAvailableBikes","userPosition","a","console","log","lat","lng","stationUrl","allSettled","fetchTdxApi","data","result","value","bikeData","stationIndex","stationData","map","item","StationUID","bikeDetail","filter","indexOf","i","length","stationStatus","stationId","stationName","StationName","Zh_tw","stationAddress","StationAddress","stationPosition","StationPosition","PositionLat","PositionLon","serviceStatus","ServiceStatus","availableRentBikes","AvailableRentBikes","availableReturnBikes","AvailableReturnBikes","srcUpdateTime","SrcUpdateTime","push","url","getToken","tokenCode","fetch","headers","authorization","access_token","response","json","queryString","URLSearchParams","grant_type","client_id","client_secret","toString","method","body","decideByAvailability","options","BikeMap","bikesAvailable","isFindingBikes","isLocatingUser","handleLocateUser","handleFindingType","bikeMapRef","useRef","userPositionMarkerRef","bikeMarkersRef","getLocationButton","disabled","onClick","geolocactionSvg","useEffect","current","L","center","zoom","layers","tileLayer","attribution","userPositionIcon","icon","iconUrl","userPositionMobileSvg","iconSize","removeLayer","setView","marker","addTo","bikeMarkerStatusStyle_bikes","bikeMarkerStatusStyle_parks","forEach","bikeMarker","station","index","bikeversion","includes","availableBikesStyle","availableParksStyle","availableBikesImg","bicycleGreySvg","availableParksImg","parkingGreySvg","divIcon","html","updateTime","exec","popupHtml","bindPopup","id","htmlFor","type","name","checked","onChange","hidden","bicycleWhiteSvg","bicycleSvg","parkingSvg","parkingWhiteSvg","Main","useState","setUserPosition","setBikesAvailable","setIsLocatingUser","setIsFindingBikes","getPosition","useCallback","bikes","locatingMessage","bool","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7403404.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-light.b2db820f.svg\";","import { useState } from \"react\";\nimport \"./header.css\";\nimport logoSvg from \"../assets/logo-light.svg\";\n\n\nfunction Logo() {\n  return (\n    <h1 className=\"logo\">\n      <a\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        href=\"https://reiracode.github.io/nbike\"\n      >\n        <img src={logoSvg} alt=\"Bikeland\" />\n      </a>\n    </h1>\n  );\n}\n\n\n\nfunction Header(props) {\n\n\n  return (\n    <header>\n      <div className=\"header_wrapper\">\n        <Logo />\n        \n      </div>\n   \n    </header>\n  );\n}\n\nexport default Header;\n","// const asyncGetGeolocation = (\n//   options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n// ) => {\n//   return new Promise((resolve, reject) => {\n//     function onResolve(data) {\n//       resolve([data.coords.latitude, data.coords.longitude]);\n//     }\n//     function onReject(error) {\n//       reject(error);\n//     }\n//     navigator.geolocation.getCurrentPosition(onResolve, onReject, options);\n//   });\n// };\n\nconst asyncGetGeolocation = () => {\n  return new Promise((resolve) => {\n    if (navigator.geolocation) {\n      const position = (position) => {\n        resolve([position.coords.latitude, position.coords.longitude]);\n      };\n      const showError = (error) => {\n        switch (error.code) {\n          case error.PERMISSION_DENIED:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.POSITION_UNAVAILABLE:\n            alert(\"讀取不到您目前的位置\");\n            break;\n          case error.TIMEOUT:\n            alert(\"讀取位置逾時\");\n            break;\n          case error.UNKNOWN_ERROR:\n            alert(\"Error\");\n            break;\n        }\n        resolve([35.4122, 139.4130]);\n      };\n      navigator.geolocation.getCurrentPosition(position, showError);\n    }\n  });\n};\n\nexport default asyncGetGeolocation;\n","import jsSHA from \"jssha/dist/sha1\";\n// https://tdx.transportdata.tw/api-service/swagger#/Bike%20Advanced(Nearby)/BikeApi_Station_AllCity_NearBy_2870\n\nexport async function getAvailableBikes(userPosition) {\n  console.log(userPosition)\n\n  //前後端的関係：如果api 後端没有處理好，advanced的功能就會在前端，json資料的比對，計算距離\n  //口罩地圖和ubike的不同。\n  //不用token的話：放上github 就用basic 搭配indexOf > -1\n  try {\n    const [lat, lng] = userPosition;\n    // const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    const stationUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Station/City/Taipei?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    const bikeUrl = `https://tdx.transportdata.tw/api/basic/v2/Bike/Availability/City/Taipei?%24format=JSON`;\n\n    // const stationUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Station/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n    // const bikeUrl = `https://tdx.transportdata.tw/api/advanced/v2/Bike/Availability/NearBy?%24top=30&%24spatialFilter=nearby(${lat},${lng},1000)&%24format=JSON`;\n\n    const data = await Promise.allSettled([\n      fetchTdxApi(stationUrl),\n      fetchTdxApi(bikeUrl),\n    ]);\n\n    const result = [];\n    const [stationData, bikeData] = [data[0].value, data[1].value];\n\n    const stationIndex = stationData.map(item => item.StationUID);\n    // console.log(stationIndex)\n\n    const bikeDetail = bikeData.filter((item) => stationIndex.indexOf(item.StationUID) > -1)\n    console.log(bikeDetail)\n\n    ////////////////////\n    for (let i = 0; i < stationData.length; i++) {\n      let stationStatus = {\n        stationId: stationData[i].StationUID,\n        stationName: stationData[i].StationName.Zh_tw,\n        stationAddress: stationData[i].StationAddress.Zh_tw,\n        stationPosition: {\n          lat: stationData[i].StationPosition.PositionLat,\n          lng: stationData[i].StationPosition.PositionLon,\n        },\n        serviceStatus: bikeDetail[i].ServiceStatus,\n        availableRentBikes: bikeDetail[i].AvailableRentBikes,\n        availableReturnBikes: bikeDetail[i].AvailableReturnBikes,\n        srcUpdateTime: bikeDetail[i].SrcUpdateTime,\n      };\n      result.push(stationStatus);\n    }\n    console.log(result) ;\n    return result;\n\n\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport default async function fetchTdxApi(url) {\n  const tokenCode = await getToken();\n  try {\n    const response = await fetch(url, { headers: { authorization: `Bearer ${tokenCode.access_token}` } });\n    \n    // const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function getToken() {\n  const parameter = {\n    grant_type: \"client_credentials\",\n    client_id: \"reira.igg-178246c9-c6da-466e\",\n    client_secret: \"9f16dc51-0a6e-492c-9dd6-278b917d0c67\"\n  };\n  let auth_url = \"https://tdx.transportdata.tw/auth/realms/TDXConnect/protocol/openid-connect/token\";\n  const queryString = new URLSearchParams(parameter).toString();\n\n  let response = await fetch(auth_url, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: (queryString)\n  });\n\n  // you can check for response.ok here, and literally just throw an error if you want\n  return await response.json();\n}\n","export default __webpack_public_path__ + \"static/media/icon-user-position-mobile.4af8babd.svg\";","export default __webpack_public_path__ + \"static/media/icon-geolocation.7783d3dc.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle.39345ce0.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-grey.7b8cb6aa.svg\";","export default __webpack_public_path__ + \"static/media/icon-bicycle-white.0cdc8c9e.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking.d41d0ee4.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-grey.84ff3ab7.svg\";","export default __webpack_public_path__ + \"static/media/icon-parking-white.95eab66a.svg\";","export default function decideByAvailability(options) {\n  if (options === 0) {\n    return \"none\";\n  } else if (options <= 5) {\n    return \"few\";\n  } else {\n    return \"\";\n  }\n}\n ","import userPositionMobileSvg from \"../assets/icon-user-position-mobile.svg\";\nimport geolocactionSvg from \"../assets/icon-geolocation.svg\";\n\nimport bicycleSvg from \"../assets/icon-bicycle.svg\";\nimport bicycleGreySvg from \"../assets/icon-bicycle-grey.svg\";\nimport bicycleWhiteSvg from \"../assets/icon-bicycle-white.svg\";\n\nimport parkingSvg from \"../assets/icon-parking.svg\";\nimport parkingGreySvg from \"../assets/icon-parking-grey.svg\";\nimport parkingWhiteSvg from \"../assets/icon-parking-white.svg\";\n\nimport { useEffect, useRef } from \"react\";\nimport decideByAvailability from \"../utils/decideByAvailability\";\nimport L from \"leaflet\";\n// https://cherniavskii.com/using-leaflet-in-react-apps-with-react-hooks/\n\nexport default function BikeMap({\n  userPosition,\n  bikesAvailable,\n  isFindingBikes,\n  isLocatingUser,\n  handleLocateUser,\n  handleFindingType,\n}) {\n  // create map\n  const bikeMapRef = useRef(null);\n\n  // add marker\n  const userPositionMarkerRef = useRef(null);\n  const bikeMarkersRef = useRef([]);\n\n  //重新定位button\n  const getLocationButton = (\n    <button\n      className=\"geolocation\"\n      disabled={isLocatingUser ? true : false}\n      onClick={handleLocateUser}>\n      <img src={geolocactionSvg} alt=\"geolocation icon\" />\n    </button>\n  );\n\n  useEffect(() => {\n    console.log(bikeMapRef.current)\n    if (bikeMapRef.current) return;\n\n    bikeMapRef.current = L.map(\"bike_map\", {\n      // attributionControl: false,\n      // zoomControl: false,\n      center: userPosition,\n      zoom: 15,\n      layers: [\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution:\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        })\n      ]\n    });\n\n  }, [userPosition]);\n\n  //  setView\n  useEffect(() => {\n    //no map\n    // if (!bikeMapRef.current) return;\n    // create your position icon\n    const userPositionIcon = L.icon({\n      iconUrl: userPositionMobileSvg,\n      iconSize: [36, 36]\n    });\n\n    // remove current user marker\n    if (userPositionMarkerRef.current)\n      bikeMapRef.current.removeLayer(userPositionMarkerRef.current);\n    bikeMapRef.current.setView(userPosition, 15);\n\n    //  create marker\n    userPositionMarkerRef.current = L.marker(userPosition, {\n      icon: userPositionIcon,\n    });\n    // add marker\n    userPositionMarkerRef.current.addTo(bikeMapRef.current);\n  }, [userPosition]);\n\n\n\n  //setting bikeMarkers\n  useEffect(() => {\n    if (!bikeMapRef.current) return; //no map\n\n    //remove previous bike markers\n    bikeMarkersRef.current.forEach((bikeMarker) => {\n      // map remove bikeMarker\n      bikeMapRef.current.removeLayer(bikeMarker);\n    });\n\n    bikeMarkersRef.current = [];\n    let bikeMarkerStatusStyle_bikes, bikeMarkerStatusStyle_parks;\n\n    bikesAvailable.forEach((station, index) => {\n      const bikeversion = station.stationName.includes(\"2.0\") ? \"plus\" : \"\"\n\n      //bikes ==  for rent\n      //  none/few/\"\"\n      //L.marker resultNormal \n      // bikeMarkerStatusStyle_bikes = decideByAvailability(station.availableRentBikes);\n      bikeMarkerStatusStyle_bikes = decideByAvailability(station.availableRentBikes) + \" \" + bikeversion;\n      bikeMarkerStatusStyle_parks = decideByAvailability(station.availableReturnBikes) + \" \" + bikeversion;\n\n      // }\n      // popup  none/few/\" \"\n      const availableBikesStyle = decideByAvailability(station.availableRentBikes) + \" \" + bikeversion;\n      const availableParksStyle = decideByAvailability(station.availableReturnBikes) + \" \" + bikeversion;\n      const availableBikesImg = `<img src=${bicycleGreySvg} alt=\"bicycle icon\" />`;\n      const availableParksImg = `<img src=${parkingGreySvg} alt=\"parking icon\" />`\n\n      //L marker的資料\n      bikeMarkersRef.current[index] = L.marker(\n        [station.stationPosition.lat, station.stationPosition.lng],\n        {\n          icon: L.divIcon({\n            className: `bikeMarker ${isFindingBikes\n              ? bikeMarkerStatusStyle_bikes\n              : bikeMarkerStatusStyle_parks\n              }`,\n            html: `<span class=\"bikeMarker_number typography-bold typography-button\">\n            ${isFindingBikes\n                ? station.availableRentBikes\n                : station.availableReturnBikes\n              }</span>`\n          }),\n        }\n      );\n\n      const updateTime = /.*T(\\d*:\\d*)/g.exec(station.srcUpdateTime)[1];\n\n      // bind popup to markers?\n      const popupHtml = `<div class=\"bikeMarkers_popup\">\n          <h3 class=\"typography-bold typography-button\">${station.stationName}</h3>\n          <div class=\"popup_info\">\n              <div class=\"popup_bikes ${availableBikesStyle}\">\n                  ${availableBikesImg}\n                  <span class=\"quantity typography-bold typography-button\">${station.availableRentBikes}</span>\n              </div>\n              <div class=\"popup_parks ${availableParksStyle}\">\n                  ${availableParksImg}\n                  <span class=\"quantity typography-bold typography-button\">${station.availableReturnBikes}</span>\n              </div>\n              <span class=\"update_time typography-medium typography-caption\">${updateTime}更新</span>\n          </div>\n        </div>`;\n\n      bikeMarkersRef.current[index].bindPopup(popupHtml, {\n        className: \"popupClass\",\n      });\n\n      // bikesRef.current[index] add to map\n      bikeMarkersRef.current[index].addTo(bikeMapRef.current);\n\n    });\n  }, [bikesAvailable, isFindingBikes]);\n\n  return userPosition ? <div id=\"bike_map\">\n    <div className=\"find_type_wrapper\">\n      <label htmlFor=\"find_bikes\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_bikes\"\n          checked={isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={bicycleWhiteSvg} alt=\"bicycle white icon\" />\n            ) : (\n              <img src={bicycleSvg} alt=\"bicycle white icon\" />\n            )}\n          </div>\n          找單車\n        </button>\n      </label>\n      <label htmlFor=\"find_parks\">\n        <input\n          type=\"radio\"\n          name=\"find_type\"\n          id=\"find_parks\"\n          checked={!isFindingBikes}\n          onChange={() => {\n            return;\n          }}\n          hidden\n        />\n        <button\n          className=\"find_type typography-bold typography-button\"\n          onClick={handleFindingType}\n        >\n          <div className=\"find_type_img\">\n            {isFindingBikes ? (\n              <img src={parkingSvg} alt=\"parking icon\" />\n            ) : (\n              <img src={parkingWhiteSvg} alt=\"parking icon\" />\n            )}\n          </div>\n          找車位\n        </button>\n      </label>\n    </div>  {getLocationButton}</div> : null;\n}\n","import \"./main.css\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport asyncGetGeolocation from \"../utils/getGeolocation\";\nimport { getAvailableBikes } from \"../utils/fetchTdxApi\";\nimport BikeMap from \"../components/bikeMap\";\n// import BikeMap from \"../components/bikeMap3\";\n\nfunction Main() {\n  function handleFindingType() {\n    setIsFindingBikes((bool) => !bool);\n  }\n\n  const TAIPEI_COORDINATES = [35.4122, 139.4130];\n  const [userPosition, setUserPosition] = useState(TAIPEI_COORDINATES);\n  // const [userPosition, setUserPosition] = useState(false);\n\n\n  const [bikesAvailable, setBikesAvailable] = useState([]);\n  // const [isLocatingUser, setIsLocatingUser] = useState(false);\n  const [isLocatingUser, setIsLocatingUser] = useState(true);\n  const [isFindingBikes, setIsFindingBikes] = useState(true);\n \n  ///方式1   OK   try catch ////////////\n  // const getLocation = async () => {\n  //   try {\n  //     const userCoordinates = await asyncGetGeolocation();\n  //     console.log(\"default定位成功\" + userCoordinates)\n  //     setUserPosition(userCoordinates);\n  //     const bikes = await getAvailableBikes(userCoordinates);\n  //     console.log(bikes)\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   } catch (error) {\n  //     throw error;\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   getLocation();\n  // }, []);\n\n\n  // 方式3 -------  用 useCallback 並將回傳的函式取名為 fetchData\n  // const fetchData = useCallback(() => {\n  // //   // STEP 3：把原本的 fetchData 改名為 fetchingData 放到 useCallback 的函式內\n  //   const fetchingData = async () => {\n  //     const data1 = await asyncGetGeolocation();\n  //     setUserPosition(data1);\n  //     const bikes = await getAvailableBikes(data1);\n  //     setBikesAvailable(bikes);\n  //     setIsLocatingUser(false);\n  //   };\n  //   fetchingData();\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('execute function in useEffect');\n  //   fetchData();\n  //   // STEP 6：把透過 useCallback 回傳的函式放到 useEffect 的 dependencies 中\n  // }, [fetchData]);\n\n\n  //  方式4  -------   OK callback //   //   //   //\n  // async function getPosts() {\n  //   const data = await asyncGetGeolocation();\n  //   console.log(data);\n  //   return data;\n  // }\n\n  const getPosition = useCallback(async () => {\n    const data = await asyncGetGeolocation();\n    console.log(\"yourlocation\" + data)\n    setUserPosition(data);\n\n    const bikes = await getAvailableBikes(data);\n    setBikesAvailable(bikes);\n    setIsLocatingUser(false);\n  }, [])\n\n  useEffect(() => {\n    console.log('execute getPosition in useEffect');\n    getPosition()\n  }, [getPosition]);\n\n \n    //   //   //   //   //   //   //   // \n  const locatingMessage = (\n    <div className=\"overlay\">\n      <span className=\"typography-bold typography-h4\">定位中</span>\n    </div>\n  );\n\n  return (\n    <main>\n      {/* {locatingMessage} */}\n      {isLocatingUser ? locatingMessage : null}\n      {userPosition &&\n        <BikeMap\n          userPosition={userPosition}\n          bikesAvailable={bikesAvailable}\n          isFindingBikes={isFindingBikes}\n          handleLocateUser={getPosition}\n          isLocatingUser={isLocatingUser}\n          handleFindingType={handleFindingType}\n        />\n      }\n  \n \n    </main>\n  );\n}\n\nexport default Main;\n","import React from \"react\";\nimport Header from \"./layout/header\";\nimport Main from \"./layout/main\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}